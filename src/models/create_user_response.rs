/*
 * Kinde Management API
 *
 * Provides endpoints to manage your Kinde Businesses
 *
 * The version of the OpenAPI document: 1
 * Contact: support@kinde.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateUserResponse {
    /// Unique id of the user in Kinde.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// True if the user was successfully created.
    #[serde(rename = "created", skip_serializing_if = "Option::is_none")]
    pub created: Option<bool>,
    #[serde(rename = "identities", skip_serializing_if = "Option::is_none")]
    pub identities: Option<Vec<crate::models::UserIdentity>>,
}

impl CreateUserResponse {
    pub fn new() -> CreateUserResponse {
        CreateUserResponse {
            id: None,
            created: None,
            identities: None,
        }
    }
}


