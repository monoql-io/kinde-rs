/*
 * Kinde Management API
 *
 * Provides endpoints to manage your Kinde Businesses
 *
 * The version of the OpenAPI document: 1
 * Contact: support@kinde.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct TokenIntrospect {
    /// Indicates the status of the token.
    #[serde(rename = "active", skip_serializing_if = "Option::is_none")]
    pub active: Option<bool>,
    /// Array of intended token recipients.
    #[serde(rename = "aud", skip_serializing_if = "Option::is_none")]
    pub aud: Option<Vec<String>>,
    /// Identifier for the requesting client.
    #[serde(rename = "client_id", skip_serializing_if = "Option::is_none")]
    pub client_id: Option<String>,
    /// Token expiration timestamp.
    #[serde(rename = "exp", skip_serializing_if = "Option::is_none")]
    pub exp: Option<String>,
    /// Token issuance timestamp.
    #[serde(rename = "iat", skip_serializing_if = "Option::is_none")]
    pub iat: Option<String>,
}

impl TokenIntrospect {
    pub fn new() -> TokenIntrospect {
        TokenIntrospect {
            active: None,
            aud: None,
            client_id: None,
            exp: None,
            iat: None,
        }
    }
}


