/*
 * Kinde Management API
 *
 * Provides endpoints to manage your Kinde Businesses
 *
 * The version of the OpenAPI document: 1
 * Contact: support@kinde.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct UpdateOrganizationUsersResponse {
    #[serde(rename = "message", skip_serializing_if = "Option::is_none")]
    pub message: Option<String>,
    #[serde(rename = "users_added", skip_serializing_if = "Option::is_none")]
    pub users_added: Option<Vec<String>>,
    #[serde(rename = "users_updated", skip_serializing_if = "Option::is_none")]
    pub users_updated: Option<Vec<String>>,
    #[serde(rename = "users_removed", skip_serializing_if = "Option::is_none")]
    pub users_removed: Option<Vec<String>>,
}

impl UpdateOrganizationUsersResponse {
    pub fn new() -> UpdateOrganizationUsersResponse {
        UpdateOrganizationUsersResponse {
            message: None,
            users_added: None,
            users_updated: None,
            users_removed: None,
        }
    }
}


