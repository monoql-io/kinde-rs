/*
 * Kinde Management API
 *
 * Provides endpoints to manage your Kinde Businesses
 *
 * The version of the OpenAPI document: 1
 * Contact: support@kinde.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct UpdateUserResponse {
    /// Unique id of the user in Kinde.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// User's first name.
    #[serde(rename = "given_name", skip_serializing_if = "Option::is_none")]
    pub given_name: Option<String>,
    /// User's last name.
    #[serde(rename = "family_name", skip_serializing_if = "Option::is_none")]
    pub family_name: Option<String>,
    /// User's preferred email.
    #[serde(rename = "email", skip_serializing_if = "Option::is_none")]
    pub email: Option<String>,
    /// Whether the user is currently suspended or not.
    #[serde(rename = "is_suspended", skip_serializing_if = "Option::is_none")]
    pub is_suspended: Option<bool>,
    /// Whether a password reset has been requested.
    #[serde(rename = "is_password_reset_requested", skip_serializing_if = "Option::is_none")]
    pub is_password_reset_requested: Option<bool>,
    /// User's profile picture URL.
    #[serde(rename = "picture", skip_serializing_if = "Option::is_none")]
    pub picture: Option<String>,
}

impl UpdateUserResponse {
    pub fn new() -> UpdateUserResponse {
        UpdateUserResponse {
            id: None,
            given_name: None,
            family_name: None,
            email: None,
            is_suspended: None,
            is_password_reset_requested: None,
            picture: None,
        }
    }
}


