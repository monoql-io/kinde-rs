/*
 * Kinde Management API
 *
 * Provides endpoints to manage your Kinde Businesses
 *
 * The version of the OpenAPI document: 1
 * Contact: support@kinde.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateUserRequest {
    #[serde(rename = "profile", skip_serializing_if = "Option::is_none")]
    pub profile: Option<Box<crate::models::CreateUserRequestProfile>>,
    /// Array of identities to assign to the created user
    #[serde(rename = "identities", skip_serializing_if = "Option::is_none")]
    pub identities: Option<Vec<crate::models::CreateUserRequestIdentitiesInner>>,
}

impl CreateUserRequest {
    pub fn new() -> CreateUserRequest {
        CreateUserRequest {
            profile: None,
            identities: None,
        }
    }
}


